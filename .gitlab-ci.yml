workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

image: rust:latest

stages:
  - lint
  - test
  - build
  - deploy

variables:
  CARGO_TERM_COLOR: always
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"

  # specifically without `CARGO_` prefix in order to `cargo test`
  # to not create `target/x86_64-unknown-linux-gnu` directory
  BUILD_TARGET: x86_64-unknown-linux-gnu

before_script:
  - echo "Cache contents:"; du -sh .cargo target/* || true

after_script:
  - echo "Cache contents:"; du -sh .cargo target/* || true

lint:
  stage: lint
  cache:
    key: debug
    paths:
      - .cargo/registry
      - target/debug
  script:
    - rustup component add clippy
    - cargo clippy

test:
  stage: test
  cache:
    key: debug
    paths:
      - .cargo/registry
      - target/debug
  script:
    - cargo test

build:
  stage: build
  cache:
    key: release
    paths:
      - .cargo/registry
      - target
  script:
    - cargo build --target ${BUILD_TARGET} --release
  artifacts:
    paths:
      - target/${BUILD_TARGET}/release/${CI_PROJECT_NAME}
    expire_in: 1 week

deploy:
  stage: deploy
  environment: production
  needs: ["build"]
  cache: []
  variables:
    SSH_USER: $SSH_USER
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
    REMOTE_SERVER_HOST: $REMOTE_SERVER_HOST
    REMOTE_SERVER_PATH: $REMOTE_SERVER_PATH
    PROJECT: $CI_PROJECT_NAME
  before_script:
    - apt-get update -yqq && apt-get install -y openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $REMOTE_SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - make deploy_to_server
