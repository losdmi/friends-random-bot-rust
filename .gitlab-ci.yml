workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

image: rust:latest

stages:
  - lint
  - test
  - build
  - deploy

variables:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: "0"
  CARGO_BUILD_TARGET: x86_64-unknown-linux-gnu
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"

cache:
  key:
    files:
      - Cargo.lock
  paths:
    - .cargo/registry

before_script:
  - export "PATH=${CARGO_HOME}/bin:$PATH"
  - echo "Cache contents:"; du -sh .cargo target/*
  # - rustup --version || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal --default-toolchain=stable
  # - rustup toolchain install stable --profile minimal --no-self-update

lint:
  stage: lint
  cache:
    paths:
      - target/debug
  script:
    - rustup component add clippy
    - cargo clippy

test:
  stage: test
  cache:
    paths:
      - target/debug
  script:
    - cargo test

build:
  stage: build
  cache:
    paths:
      - target/${CARGO_BUILD_TARGET}/release
  script:
    - cargo build --target ${CARGO_BUILD_TARGET} --release
  artifacts:
    paths:
      - target/${CARGO_BUILD_TARGET}/release/${CI_PROJECT_NAME}
    expire_in: 1 week

deploy:
  stage: deploy
  environment: production
  cache: []
  script:
    - echo "Deploying to production..."
    # Add your deployment commands here
    # e.g. scp target/release/myapp user@server:/path/
  needs: ["build"]
